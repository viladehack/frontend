{"ast":null,"code":"var _jsxFileName = \"/Users/krodcas/Desktop/HappyGuiris/src/components/FromSignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\"; // more info: https://bluuweb.github.io/react/formularios/#react-hook-form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FromSignUp = () => {\n  _s();\n\n  // 1. State del componente!\n  const [user, setUser] = useLocalStorage(); // const [user, setUser] = useState();\n\n  const [listUser, setListUser] = useState([]); // 2. Funciones\n  // handleInputChange: modifica el state a cada cambio de los inputs\n\n  function handleInputChange(element) {\n    setUser({ ...user,\n      [element.target.name]: element.target.value\n    });\n  } //3. handleSubmitUserData: guarda en localstorage\n\n\n  function handleSubmitUserData(event) {\n    event.preventDefault(); // Objetivo: pintar por consola el user / guardar en localstorage\n    // 3.1. Pintar por consola el user\n\n    console.log(\"Guardando usuario\", user);\n    setListUser([...listUser, user]); // 3.2. Guardar el localstorage\n\n    localStorage.setItem(\"listUser\", JSON.stringify(listUser)); // 3.3 Clean value\n\n    event.target.reset();\n    setUser();\n  } // Render / return\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmitUserData,\n    className: \"top\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nick\",\n      id: \"nick\",\n      placeholder: \"Nick\",\n      onChange: element => handleInputChange(element)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"E-mail\",\n      onChange: element => handleInputChange(element)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"Password\" // More info of autoComplete:\n      // https://stackoverflow.com/questions/54970352/input-elements-should-have-autocomplete-attributes\n      ,\n      autoComplete: \"on\",\n      onChange: element => handleInputChange(element)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign me up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FromSignUp, \"21Nz6c8/U7fjbq/jT9g0b7KbNNs=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = FromSignUp;\nexport default FromSignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"FromSignUp\");","map":{"version":3,"sources":["/Users/krodcas/Desktop/HappyGuiris/src/components/FromSignUp.js"],"names":["React","useState","useLocalStorage","FromSignUp","user","setUser","listUser","setListUser","handleInputChange","element","target","name","value","handleSubmitUserData","event","preventDefault","console","log","localStorage","setItem","JSON","stringify","reset"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,0BAA5B,C,CAEA;;;;AACA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,eAAe,EAAvC,CAFuB,CAGvB;;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAJuB,CAMvB;AACA;;AACA,WAASO,iBAAT,CAA2BC,OAA3B,EAAoC;AAClCJ,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACK,OAAO,CAACC,MAAR,CAAeC,IAAhB,GAAuBF,OAAO,CAACC,MAAR,CAAeE;AAAjD,KAAD,CAAP;AACD,GAVsB,CAYvB;;;AACA,WAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACnCA,IAAAA,KAAK,CAACC,cAAN,GADmC,CAEnC;AAEA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,IAAjC;AACAG,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,IAAd,CAAD,CAAX,CANmC,CAQnC;;AACAc,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAef,QAAf,CAAjC,EATmC,CAWnC;;AACAQ,IAAAA,KAAK,CAACJ,MAAN,CAAaY,KAAb;AAEAjB,IAAAA,OAAO;AACR,GA5BsB,CA8BvB;;;AACA,sBACE;AAAM,IAAA,QAAQ,EAAEQ,oBAAhB;AAAsC,IAAA,SAAS,EAAC,KAAhD;AAAA,4BACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,WAAW,EAAC,MAJd;AAKE,MAAA,QAAQ,EAAGJ,OAAD,IAAaD,iBAAiB,CAACC,OAAD;AAL1C;AAAA;AAAA;AAAA;AAAA,YADF,eAQE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,QAAQ,EAAGA,OAAD,IAAaD,iBAAiB,CAACC,OAAD;AAL1C;AAAA;AAAA;AAAA;AAAA,YARF,eAeE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,EAAE,EAAC,UAHL;AAIE,MAAA,WAAW,EAAC,UAJd,CAKE;AACA;AANF;AAOE,MAAA,YAAY,EAAC,IAPf;AAQE,MAAA,QAAQ,EAAGA,OAAD,IAAaD,iBAAiB,CAACC,OAAD;AAR1C;AAAA;AAAA;AAAA;AAAA,YAfF,eAyBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CA5DD;;GAAMN,U;UAEoBD,e;;;KAFpBC,U;AA8DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\n// more info: https://bluuweb.github.io/react/formularios/#react-hook-form\nconst FromSignUp = () => {\n  // 1. State del componente!\n  const [user, setUser] = useLocalStorage();\n  // const [user, setUser] = useState();\n  const [listUser, setListUser] = useState([]);\n\n  // 2. Funciones\n  // handleInputChange: modifica el state a cada cambio de los inputs\n  function handleInputChange(element) {\n    setUser({ ...user, [element.target.name]: element.target.value });\n  }\n\n  //3. handleSubmitUserData: guarda en localstorage\n  function handleSubmitUserData(event) {\n    event.preventDefault();\n    // Objetivo: pintar por consola el user / guardar en localstorage\n\n    // 3.1. Pintar por consola el user\n    console.log(\"Guardando usuario\", user);\n    setListUser([...listUser, user]);\n\n    // 3.2. Guardar el localstorage\n    localStorage.setItem(\"listUser\", JSON.stringify(listUser));\n\n    // 3.3 Clean value\n    event.target.reset();\n\n    setUser();\n  }\n\n  // Render / return\n  return (\n    <form onSubmit={handleSubmitUserData} className=\"top\">\n      <input\n        type=\"text\"\n        name=\"nick\"\n        id=\"nick\"\n        placeholder=\"Nick\"\n        onChange={(element) => handleInputChange(element)}\n      />\n      <input\n        type=\"text\"\n        name=\"email\"\n        id=\"email\"\n        placeholder=\"E-mail\"\n        onChange={(element) => handleInputChange(element)}\n      />\n      <input\n        type=\"password\"\n        name=\"password\"\n        id=\"password\"\n        placeholder=\"Password\"\n        // More info of autoComplete:\n        // https://stackoverflow.com/questions/54970352/input-elements-should-have-autocomplete-attributes\n        autoComplete=\"on\"\n        onChange={(element) => handleInputChange(element)}\n      />\n      <button type=\"submit\">Sign me up</button>\n    </form>\n  );\n};\n\nexport default FromSignUp;\n"]},"metadata":{},"sourceType":"module"}